{"ast":null,"code":"var _jsxFileName = \"/home/hoanghien/RHF/src/components/LoginForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useForm, useWatch, Controller, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  username: yup.string().required(\"Please enter username\").max(50, \"username up to 10 characters\"),\n  password: yup.string().required(\"Please enter password\").max(20, \"password up to 20 characters\")\n});\nlet childRender = 0;\n\nfunction UserNameWatched({\n  control\n}) {\n  _s();\n\n  useWatch({\n    control,\n    name: \"password\" // without supply name will watch the entire form, or ['userName', 'password'] to watch both\n\n  });\n  childRender++;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"child render count: \", childRender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserNameWatched, \"8Kdl8q4plWIprCWdiXZMPsLRMeE=\", false, function () {\n  return [useWatch];\n});\n\n_c = UserNameWatched;\nlet parentRender = 0;\nexport default function LoginForm() {\n  _s2();\n\n  var _errors$username, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n  useWatch({\n    name: \"username\",\n    control\n  });\n  parentRender++;\n  console.log('render react hook form', parentRender);\n\n  const onLoginSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Demo React Hook Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onLoginSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fields.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(`test.${index}.firstName`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 42\n              }, this),\n              name: `test.${index}.lastName`,\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            append({\n              firstName: \"tanTan\",\n              lastName: \"Kay\"\n            });\n          },\n          children: \"append\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"parent render count: \", parentRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserNameWatched, {\n        control: control\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(LoginForm, \"8LzrOKf0aCP94e4FESN0famlc/A=\", false, function () {\n  return [useForm, useFieldArray, useWatch];\n});\n\n_c2 = LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserNameWatched\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/home/hoanghien/RHF/src/components/LoginForm.js"],"names":["useForm","useWatch","Controller","useFieldArray","yupResolver","yup","schema","object","shape","username","string","required","max","password","childRender","UserNameWatched","control","name","parentRender","LoginForm","register","handleSubmit","formState","errors","resolver","fields","append","remove","console","log","onLoginSubmit","data","message","map","item","index","field","id","firstName","lastName"],"mappings":"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","sourcesContent":["import { useForm, useWatch, Controller, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  username: yup\n    .string()\n    .required(\"Please enter username\")\n    .max(50, \"username up to 10 characters\"),\n  password: yup\n    .string()\n    .required(\"Please enter password\")\n    .max(20, \"password up to 20 characters\")\n});\n\nlet childRender = 0;\nfunction UserNameWatched({ control }) {\n  useWatch({\n    control,\n    name: \"password\" // without supply name will watch the entire form, or ['userName', 'password'] to watch both\n  });\n\n  childRender++;\n\n  return (\n    <>\n      <p>child render count: {childRender}</p>\n    </>\n  );\n}\n\nlet parentRender = 0;\n\nexport default function LoginForm() {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors }\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const {\n    fields,\n    append,\n    remove,\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n\n  useWatch({\n    name: \"username\",\n    control\n  });\n\n  parentRender++;\n  console.log('render react hook form', parentRender);\n\n  const onLoginSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <>\n      <h1>Demo React Hook Form</h1>\n      <form onSubmit={handleSubmit(onLoginSubmit)}>\n        <div className=\"field\">\n          <label>Username: </label>\n          <input {...register(\"username\")} />\n          {errors.username && <p className=\"error\">{errors.username?.message}</p>}\n        </div>\n\n        <div className=\"field\">\n          <label>Password: </label>\n          <input {...register(\"password\")} />\n          {errors.password && <p className=\"error\">{errors.password?.message}</p>}\n        </div>\n\n        <ul>\n          {fields.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <input {...register(`test.${index}.firstName`)} />\n\n                <Controller\n                  render={({ field }) => <input {...field} />}\n                  name={`test.${index}.lastName`}\n                  control={control}\n                />\n                <button type=\"button\" onClick={() => remove(index)}>\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        <section>\n          <button\n            type=\"button\"\n            onClick={() => {\n              append({ firstName: \"tanTan\", lastName: \"Kay\" });\n            }}\n          >\n            append\n          </button>\n        </section>\n\n        <div className=\"field\">\n          <button type=\"submit\">Submit</button>\n        </div>\n        <p>parent render count: {parentRender}</p>\n        <UserNameWatched control={control} />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}